/*	Data Structures for heap ADT	   Created by:	   Date:*/#include <stdbool.h>typedef struct{   void** heapAry;   int    last;   int    size;   int    (*compare) (void* argu1, void* argu2);   int    maxSize;} HEAP;//	Prototype DefinitionsHEAP* heapCreate (int maxSize,            int (*compare) (void* arg1, void* arg2));bool  heapInsert  (HEAP* heap, void*  dataPtr,int *step);bool  heapDelete  (HEAP* heap, void** dataOutPtr,int *step);int   heapCount   (HEAP* heap);bool  heapFull    (HEAP* heap);bool  heapEmpty   (HEAP* heap);void  heapDestroy (HEAP* heap);static void _reheapUp   (HEAP* heap, int childLoc,int *step);static void _reheapDown (HEAP* heap, int root,int *step);